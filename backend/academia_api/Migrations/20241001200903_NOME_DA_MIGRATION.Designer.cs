// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using academia_api.data;

#nullable disable

namespace academia_api.Migrations
{
    [DbContext(typeof(AcademiaContext))]
    [Migration("20241001200903_NOME_DA_MIGRATION")]
    partial class NOME_DA_MIGRATION
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("academia_api.model.Academia", b =>
                {
                    b.Property<int>("IdAcademia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAcademia"));

                    b.Property<string>("Cnpj")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("IdAcademia");

                    b.ToTable("tb_academia");

                    b.HasData(
                        new
                        {
                            IdAcademia = 1,
                            Cnpj = "12.345.678/0001-99",
                            Endereco = "Rua Principal, 123",
                            Nome = "Academia Central"
                        });
                });

            modelBuilder.Entity("academia_api.model.Aluno", b =>
                {
                    b.Property<int>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAluno"));

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAcademia")
                        .HasColumnType("int");

                    b.Property<int>("IdProfessor")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("IdAluno");

                    b.HasIndex("IdAcademia");

                    b.HasIndex("IdProfessor");

                    b.ToTable("tb_aluno");
                });

            modelBuilder.Entity("academia_api.model.Professor", b =>
                {
                    b.Property<int>("IdProfessor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProfessor"));

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAcademia")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("IdProfessor");

                    b.HasIndex("IdAcademia");

                    b.ToTable("tb_professor");

                    b.HasData(
                        new
                        {
                            IdProfessor = 1,
                            Cpf = "123.456.789-00",
                            DtNascimento = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAcademia = 1,
                            Login = "professor1",
                            Nome = "Professor João",
                            Senha = "senha1"
                        });
                });

            modelBuilder.Entity("academia_api.model.Treino", b =>
                {
                    b.Property<int>("IdTreino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTreino"));

                    b.Property<string>("DiaSemana")
                        .HasColumnType("longtext");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<string>("Letra")
                        .HasColumnType("longtext");

                    b.Property<string>("ListaExercicios")
                        .HasColumnType("longtext");

                    b.HasKey("IdTreino");

                    b.HasIndex("IdAluno");

                    b.ToTable("tb_treino");
                });

            modelBuilder.Entity("academia_api.model.Aluno", b =>
                {
                    b.HasOne("academia_api.model.Academia", "Academia")
                        .WithMany("Alunos")
                        .HasForeignKey("IdAcademia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("academia_api.model.Professor", "Professor")
                        .WithMany("Alunos")
                        .HasForeignKey("IdProfessor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academia");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("academia_api.model.Professor", b =>
                {
                    b.HasOne("academia_api.model.Academia", "Academia")
                        .WithMany("Professores")
                        .HasForeignKey("IdAcademia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academia");
                });

            modelBuilder.Entity("academia_api.model.Treino", b =>
                {
                    b.HasOne("academia_api.model.Aluno", "Aluno")
                        .WithMany("Treinos")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("academia_api.model.Academia", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Professores");
                });

            modelBuilder.Entity("academia_api.model.Aluno", b =>
                {
                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("academia_api.model.Professor", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
